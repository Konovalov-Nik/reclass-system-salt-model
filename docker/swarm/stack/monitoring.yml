classes:
- service.prometheus.server.container
- service.prometheus.alertmanager.container
- service.prometheus.pushgateway.container
- system.prometheus.server
- system.prometheus.alertmanager
parameters:
  docker:
    client:
      stack:
        monitoring:
          network:
            monitoring:
              driver: overlay
              driver_opts:
                encrypted: 1
          service:
            remote_agent:
              networks:
                - monitoring
              deploy:
                replicas: 1
                labels:
                  com.mirantis.monitoring: "remote_agent"
                restart_policy:
                  condition: any
              labels:
                com.mirantis.monitoring: "remote_agent"
              image: ${_param:docker_image_remote_agent}
              ports:
                - 15014:${telegraf:remote_agent:output:prometheus_client:bind:port}
              volumes:
                - ${telegraf:remote_agent:dir:config}:/etc/telegraf
                - ${telegraf:remote_agent:dir:config_d}:/etc/telegraf/telegraf.d
            alertmanager:
              networks:
                - monitoring
              deploy:
                replicas: 2
                labels:
                  com.mirantis.monitoring: "alertmanager"
                restart_policy:
                  condition: any
              labels:
                com.mirantis.monitoring: "alertmanager"
              image: ${_param:docker_image_alertmanager}
              ports:
                - 15011:${prometheus:alertmanager:bind:port}
              volumes:
                - ${prometheus:alertmanager:dir:config}:${_param:prometheus_alertmanager_config_directory}
                - ${prometheus:alertmanager:dir:data}:${_param:prometheus_alertmanager_data_directory}
              environment:
                config_dir: ${_param:prometheus_alertmanager_config_directory}
                data_dir: ${_param:prometheus_alertmanager_data_directory}
                bind_port: ${prometheus:alertmanager:bind:port}
                bind_address: ${prometheus:alertmanager:bind:address}
                discovery_domain: 'monitoring_alertmanager'
            pushgateway:
              networks:
                - monitoring
              deploy:
                replicas: 2
                labels:
                  com.mirantis.monitoring: "pushgateway"
                restart_policy:
                  condition: any
              environment:
                bind_port: ${prometheus:pushgateway:bind:port}
                bind_address: ${prometheus:pushgateway:bind:address}
              labels:
                com.mirantis.monitoring: "pushgateway"
              image: ${_param:docker_image_pushgateway}
              ports:
                - 15012:${prometheus:pushgateway:bind:port}
            server:
              networks:
                - monitoring
              deploy:
                replicas: 1
                labels:
                  com.mirantis.monitoring: "prometheus"
                restart_policy:
                  condition: any
              labels:
                com.mirantis.monitoring: "prometheus"
              image: ${_param:docker_image_prometheus}
              ports:
                - 15010:${prometheus:server:bind:port}
              volumes:
                - ${prometheus:server:dir:config}:${_param:prometheus_server_config_directory}
                - ${prometheus:server:dir:data}:${_param:prometheus_server_data_directory}
              environment:
                config_dir: ${_param:prometheus_server_config_directory}
                data_dir: ${_param:prometheus_server_data_directory}
                bind_port: ${prometheus:server:bind:port}
                bind_address: ${prometheus:server:bind:address}
                storage_local_engine: ${prometheus:server:storage:local:engine}
                storage_local_retention: ${prometheus:server:storage:local:retention}
                storage_local_target_heap_size: ${prometheus:server:storage:local:target_heap_size}
                storage_local_num_fingerprint_mutexes: ${prometheus:server:storage:local:num_fingerprint_mutexes}
